import java.util.Scanner;

/*Take any natural number n.

If n is even, divide it by 2 to get n / 2.
If n is odd, multiply it by 3 and add 1 to get 3n + 1.
Repeat the process indefinitely.
In 1937, Lothar Collatz proposed that no matter what number you begin with, the sequence eventually reaches 1. This is widely believed to be true, but has never been formally proved.

Write a program that inputs a number from the user, and then displays the Collatz Sequence starting from that number. Stop when you reach 1.*/
public class CollatzSequence {
	
	public static void main(String[] args) {
		
		collatzConjecture();
	}
		
		public static void collatzConjecture() {
			
			Scanner console = new Scanner(System.in);
			System.out.print("Starting number: ");
			int number = console.nextInt();
			int counter = 0;
			int largestValue = 0;
			
			if (number == 1) {
				number = 0;
			}
			
			do {
				
				if(number % 2 == 0) {
					number = number / 2;
					counter++;
					
					largestValue = Math.max(number, largestValue);
					
					
				} else {
					number = (number * 3) + 1;
					counter++;
					
					largestValue = Math.max(number, largestValue);
				}	
				System.out.print(number + "\t");
				
			} while(number != 1);
			
			System.out.println("\nTerminated after " + counter + " steps.");
			System.out.println("The largest value was " + largestValue + ".");
			
			console.close();
		}	
}
