import java.util.Arrays;

// Given 2 strings, write a function to decide if one is a permutation of the other

public class checkPermutation {
	public static void main(String[] args) {
		System.out.println(stringPermutation("Peek", "Keep")); // true
		System.out.println(stringPermutation("Faiza", "Faiz")); // false
		System.out.println(stringPermutation("dog", "god")); // true
		System.out.println(stringPermutation("ahsan", "faiza")); // false
		System.out.println(stringPermutation("tea", "eat")); // true
	}
	
	// Sorted strings and Loops
	public static Boolean stringPermutation(String word1, String word2){
		Boolean isPermutation = false;
		
		if (word1.length() != word2.length()) {
			return isPermutation;
		}
		
		char[] wordOne = word1.toLowerCase().toCharArray();
		char[] wordTwo = word2.toLowerCase().toCharArray();
		
		Arrays.sort(wordOne);
		Arrays.sort(wordTwo);
		
		for(int i = 0; i < wordOne.length; i++) {
			if (wordOne[i] != wordTwo[i]) {
				return isPermutation;
			} else {
				isPermutation = true;
			}
		}
		return isPermutation;
	}
}
