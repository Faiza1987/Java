 /* 1.6
 * Implement a method to perform basic string compression using the counts
 * of repeated characters. For example, the string aabcccccaaa would become
 * a2b1c5a3. If the "compressed" string would not become smaller than the
 * original string, your method should return the original string.
 */
public class compressedString {
	public static void main(String[] args) {
		System.out.println(compressString("aaabbbb")); // "a3b4"
	}
	
	public static String compressString(String word) {
		if (word.length() == 0) {
			return word;
		}
		
		String compressed = Character.toString(word.charAt(0));
		System.out.println("Line 18: " + compressed);
		int count = 1;
		
		if (word.length() == 1) {
			return compressed + Integer.toString(count);
		}
		
		for(int i = 0; i < word.length() - 1; i++) {
			
			if(word.charAt(i) == word.charAt(i + 1)) {
				count++;
			} else {
				compressed += Integer.toString(count) + Character.toString(word.charAt(i + 1));
				count = 1;
			}
		}
		return compressed;
	}
}
